/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/tax_classes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All Tax Classes
         * @description Returns a list of all *Tax Classes* in a store.
         *
         *     Default sorting is by tax-class id, from lowest to highest.
         */
        get: operations["getTaxClasses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax_classes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a Tax Class
         * @description Returns a single *Tax Class*.
         */
        get: operations["getTaxClass"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * taxClass_Full
         * @example {
         *       "id": "1",
         *       "name": "Shipping",
         *       "created_at": "1973-01-20T21:34:57.903+00:00",
         *       "updated_at": "1990-12-30T00:29:23.515+00:00"
         *     }
         */
        taxClass_Full: {
            /**
             * @description The unique numerical ID of the tax class. A read-only value which is automatically assigned and increments sequentially.
             * @example 1
             */
            id?: string;
            /**
             * @description The name of the tax class.
             * @example Shipping
             */
            name?: string;
            /**
             * Format: date-time
             * @description Date and time of the tax class' creation. Read-Only.
             * @example 2018-05-07T20:14:17+00:00
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Date and time when the tax class was last updated. Read-Only.
             * @example 2018-05-07T20:14:17+00:00
             */
            updated_at?: string;
        };
    };
    responses: never;
    parameters: {
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
        Accept: string;
        /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body. */
        ContentType: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getTaxClasses: {
        parameters: {
            query?: {
                /** @description Optional filter param. Number of pages. */
                page?: number;
                /** @description Optional filter param. Number of items per page */
                limit?: number;
            };
            header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components["parameters"]["Accept"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["taxClass_Full"][];
                };
            };
        };
    };
    getTaxClass: {
        parameters: {
            query?: never;
            header: {
                /** @description The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body. */
                Accept: components["parameters"]["Accept"];
            };
            path: {
                /** @description ID of the tax class. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["taxClass_Full"];
                };
            };
        };
    };
}
